from mdocfile.mdoc import Mdoc
import pandas as pd

from .threaded import run_threaded


def _tilt_mdoc(mdoc_file, tlt_file, skipped_tilts, verbose=False, dry_run=False, overwrite=False):
    if verbose:
        print(f'Tilting mdoc: {mdoc_file}')
        print(f'using: {tlt_file}')

    output = mdoc_file.parent / 'mdoc_tilted' / mdoc_file.name

    if not overwrite and output.exists():
        raise FileExistsError(output)

    if not dry_run:
        mdoc = Mdoc.from_file(mdoc_file)
        new_angles = iter(pd.read_csv(tlt_file, header=None)[0])
        for i, section in enumerate(mdoc.section_data):
            if i in skipped_tilts:
                continue
            try:
                section.TiltAngle = next(new_angles)
            except StopIteration:
                raise RuntimeError(f'not enough tilts generated by aretomo in {tlt_file}')

        try:
            next(new_angles)
        except StopIteration:
            pass
        else:
            raise RuntimeError(f'too many tilts generated by aretomo in {tlt_file}')

        with open(output, 'w+' if overwrite else 'w') as f:
            f.write(mdoc.to_string())


def tilt_mdocs_batch(progress, tilt_series, **kwargs):
    partials = []
    for ts in tilt_series:
        partials.append(
            lambda ts=ts: _tilt_mdoc(
                mdoc_file=ts['mdoc'],
                tlt_file=ts['tlt'],
                skipped_tilts=ts['skipped_tilts'],
                **kwargs,
            )
        )

    run_threaded(progress, partials, label='Creating tilted mdocs...', **kwargs)
