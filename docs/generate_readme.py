#!/usr/bin/env python3

import contextlib
import io
from inspect import cleandoc
from pathlib import Path

import click

from stemia import cli
from stemia.utils.click import print_command_tree


def get_help(name, cli):
    """Get the help message of a cli recursively."""
    help_msg = []
    if isinstance(cli, click.Group):
        for subname, subcli in cli.commands.items():
            help_msg.extend(get_help(f"{name} {subname}", subcli))
    elif isinstance(cli, click.Command):
        header = f"### {name}\n\n```"
        ctx = click.Context(cli, info_name=name)
        body = cli.get_help(ctx)
        footer = "```"
        help_msg.append("\n".join([header, body, footer]))
    return help_msg


help_msg = get_help("stemia", cli)

readme_separator = "<!-- autogenerated content start here -->"

readme = Path(__file__).parent.parent / "README.md"

header = []
with open(readme) as f:
    for line in f.readlines():
        if readme_separator in line:
            break
        header.append(line)

output = io.StringIO()
with contextlib.redirect_stdout(output):
    print(f'{"".join(header)}{readme_separator}\n')
    print(
        cleandoc(
            """
    ## Tools

    Everything is accessible through the main command line interface `stemia`.

    Try `stemia -h` for help, or `stemia -l` for the command tree:

    ```"""
        )
    )
    print_command_tree(cli)
    print(
        """```
    """
    )
    print("\n\n".join(help_msg))

with open(readme, "w") as f:
    f.write(output.getvalue())
